{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","className","Link","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","onSubmit","preventDefault","newUser","name","email","password","password2","console","log","post","this","props","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","registerUser","userData","withRouter","Login","loginUser","emailnotfound","passwordincorrect","then","res","data","setItem","jwt_decode","catch","err","response","component","rest","Route","render","Redirect","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Switch","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71bd6d0d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"127.0.0.1:5000/register\", userData)\r\n    /*.then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );*/\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\n//const isEmpty = require(\"is-empty\");\r\n\r\n function isEmpty(value) {\r\n  return (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n    (typeof value === \"string\" && value.trim().length === 0)\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\nrootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                fontFamily: \"monospace\"\r\n              }}\r\n              className=\"col s5 brand-logo center black-text\"\r\n            >\r\n              <i className=\"material-icons\">GOCAFE</i>\r\n              WEB\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>GoCAFE</b> Your one sure stop{\" \"}\r\n              <span style={{ fontFamily: \"monospace\" }}>for</span> Tasty, Quick meals\r\n              \r\n            </h4>\r\n            <p className=\"flow-text grey-text text-darken-1\">\r\n              Tasty meals on the Go......\r\n            </p>\r\n            <br />\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    console.log(newUser);\r\n    axios.post('http://localhost:5000/register', newUser)\r\n    //this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\"></i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\"></i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"landing-copy col s12 center-align\">\r\n            <h4>\r\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                You are logged into a full-stack{\" \"}\r\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n              </p>\r\n            </h4>\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Update user details\r\n            </button>\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}